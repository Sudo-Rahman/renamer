name: Create Release with Bundles

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

jobs:
  build-darwin:
    name: Build for macOS (Universal)
    runs-on: macos-latest
    defaults:
      run:
        working-directory: tauri-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            tauri-app/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: tauri-app/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Build (Darwin Universal)
        run: pnpm tauri build --target universal-apple-darwin

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-app
          path: |
            tauri-app/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            tauri-app/src-tauri/target/universal-apple-darwin/release/bundle/macos/*.tar.gz
            tauri-app/src-tauri/target/universal-apple-darwin/release/bundle/macos/*.sig

  build-windows:
    name: Build for Windows (x86 and ARM)
    runs-on: windows-latest
    defaults:
      run:
        working-directory: tauri-app
    strategy:
      matrix:
        arch: [ x86_64-pc-windows-msvc, aarch64-pc-windows-msvc ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            tauri-app/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: rustup target add ${{ matrix.arch }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: tauri-app/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Build for Windows ${{ matrix.arch }}
        run: pnpm tauri build --target ${{ matrix.arch }}

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app-${{ matrix.arch }}
          path: |
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/msi/*.msi
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/nsis/*.exe
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/nsis/*.sig

  build-linux:
    name: Build for Linux (x86 and ARM)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tauri-app
    strategy:
      matrix:
        arch: [ x86_64-unknown-linux-gnu ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          version: 1.0

      - name: Cache Rust build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            tauri-app/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.arch }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false


      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: tauri-app/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Build for Linux ${{ matrix.arch }}
        run: |
          pnpm tauri build --target ${{ matrix.arch }}

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app-${{ matrix.arch }}
          path: |
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/appimage/*.AppImage
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/deb/*.deb
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/rpm/*.rpm
            tauri-app/src-tauri/target/${{ matrix.arch }}/release/bundle/snap/*.sig

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ build-darwin, build-windows, build-linux ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}