name: API Publish
on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install musl-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Cache Rust build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Build
        run: |
          cd renamer-api
          rustup target add x86_64-unknown-linux-musl
          cargo build --release --target x86_64-unknown-linux-musl

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Deploy to server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
          PASS: ${{ secrets.SERVER_PASS }}
        run: |
          # Copier le binaire et les fichiers nécessaires
          cd renamer-api
          sshpass -p "$PASS" scp -o StrictHostKeyChecking=no target/x86_64-unknown-linux-musl/release/renamer-api $USER@$HOST:/www/api/renamer/
          sshpass -p "$PASS" scp -o StrictHostKeyChecking=no .env $USER@$HOST:/www/api/renamer/
          sshpass -p "$PASS" scp -o StrictHostKeyChecking=no Dockerfile $USER@$HOST:/www/api/renamer/
          
          # Exécuter des commandes sur le serveur distant
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
            cd /www/api/renamer
            docker build -t renamer-api .
            docker stop renamer-api || true
            docker rm renamer-api || true
            docker run -d --name renamer-api --net host renamer-api
          EOF